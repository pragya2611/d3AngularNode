var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AddToCart.html",[0,0.013,1,2.049]],["body/classes/AddToCart.html",[0,0.016,1,3.323,2,1.575,3,0.268,4,0.229,5,0.229,6,3.708,7,0.392,8,1.408,9,5.045,10,5.045,11,0.661,12,0.025,13,1.147,14,0.993,15,4.385,16,2.419,17,4.385,18,0.268,19,0.016,20,0.02,21,0.016]],["title/controllers/AppController.html",[22,1.491,23,2.253]],["body/controllers/AppController.html",[0,0.015,3,0.251,4,0.215,5,0.215,7,0.368,12,0.025,13,1.102,14,0.747,18,0.251,19,0.015,20,0.02,21,0.015,22,2.325,23,3.513,24,1.695,25,3.482,26,1.889,27,5.163,28,1.582,29,4.118,30,1.478,31,0.819,32,1.06,33,3.519,34,3.482,35,2.5,36,1.695,37,1.478,38,4.118]],["title/modules/AppModule.html",[39,1.296,40,2.51]],["body/modules/AppModule.html",[0,0.012,3,0.192,4,0.164,5,0.164,11,0.379,12,0.026,14,0.57,18,0.192,19,0.012,20,0.016,21,0.012,23,2.932,24,1.294,26,1.128,30,1.128,31,1.012,32,0.809,33,2.666,34,2.657,37,1.128,39,1.687,40,3.763,41,1.495,42,3.142,43,4.39,44,3.142,45,4.39,46,5.476,47,3.142,48,1.389,49,0.865,50,1.055,51,3.142,52,4.39,53,3.142,54,3.142,55,2.099,56,1.495,57,1.614,58,2.666,59,3.142,60,2.088,61,2.338,62,2.254,63,3.142,64,2.666,65,3.142,66,2.666,67,3.142,68,2.444,69,2.657,70,1.908,71,3.142,72,1.75]],["title/injectables/AppService.html",[33,2.049,73,0.992]],["body/injectables/AppService.html",[0,0.016,3,0.266,4,0.228,5,0.228,7,0.39,12,0.025,13,1.143,14,0.791,18,0.266,19,0.016,20,0.02,21,0.016,26,1.958,27,5.273,30,1.566,31,0.679,32,1.122,33,3.312,37,1.566,73,1.604,74,2.075,75,3.688,76,4.362,77,4.362,78,4.362]],["title/controllers/AuthController.html",[22,1.491,79,2.253]],["body/controllers/AuthController.html",[0,0.01,3,0.162,4,0.138,5,0.138,7,0.237,11,0.469,12,0.026,14,0.705,18,0.162,19,0.017,20,0.014,21,0.01,22,1.171,24,1.091,26,1.395,28,1.493,30,1.395,31,0.93,32,0.682,35,1.608,36,1.091,37,1.395,48,1.717,49,1.069,50,1.304,79,2.594,80,2.24,81,1.97,82,2.649,83,4.193,84,2.321,85,3.284,86,3.421,87,2.24,88,3.138,89,3.884,90,2.649,91,2.239,92,2.649,93,3.242,94,3.884,95,2.649,96,2.889,97,1.97,98,1.26,99,1.26,100,1.97,101,1.97,102,1.97,103,2.24,104,2.359,105,2.24,106,2.361,107,1.97,108,1.608,109,2.24,110,2.24,111,1.475,112,1.97,113,2.24,114,1.608,115,2.649,116,1.171,117,1.599,118,2.649,119,2.649,120,1.36,121,1.091,122,2.649,123,1.608,124,2.649,125,2.649]],["title/modules/AuthModule.html",[39,1.296,66,2.049]],["body/modules/AuthModule.html",[0,0.011,3,0.185,4,0.158,5,0.158,12,0.026,18,0.185,19,0.011,20,0.016,21,0.011,24,1.76,31,0.943,32,0.779,39,1.904,41,1.439,66,3.875,68,3.283,69,2.558,70,2.595,72,2.759,79,3.31,106,3.028,107,2.25,114,1.837,126,1.553,127,1.837,128,1.837,129,1.553,130,2.595,131,2.558,132,2.558,133,2.558,134,3.58,135,2.595,136,1.837,137,1.837,138,3.025,139,3.025,140,4.274,141,2.25,142,4.274,143,3.025,144,3.025,145,3.025,146,2.25,147,3.025,148,1.684,149,3.025,150,2.25,151,3.025,152,3.025,153,2.558,154,3.025,155,2.25,156,2.558]],["title/injectables/AuthService.html",[73,0.992,106,1.732]],["body/injectables/AuthService.html",[0,0.007,3,0.117,4,0.1,5,0.1,7,0.172,11,0.564,12,0.026,14,0.847,18,0.117,19,0.007,20,0.011,21,0.007,26,1.091,30,1.539,31,0.865,32,0.494,36,1.251,37,1.539,48,2.065,49,1.285,50,1.569,73,0.893,74,0.913,84,2.288,85,2.569,86,2.26,87,2.569,88,2.601,91,2.196,93,2.387,98,0.913,99,0.913,103,1.624,104,1.845,105,1.624,106,1.56,108,1.166,109,1.624,110,1.624,111,2.601,112,1.428,116,2.196,117,1.553,120,0.986,121,0.791,141,1.428,148,2.897,150,1.428,155,2.26,156,1.624,157,1.624,158,3.12,159,3.771,160,3.038,161,1.845,162,1.92,163,2.551,164,5.203,165,1.92,166,1.92,167,2.398,168,1.92,169,1.92,170,3.038,171,1.92,172,3.038,173,1.92,174,1.624,175,1.624,176,1.624,177,3.771,178,1.845,179,1.428,180,1.845,181,1.92,182,1.92,183,1.92,184,1.92,185,3.038,186,1.428,187,1.282,188,1.92,189,1.92,190,1.92,191,3.625,192,1.92,193,1.667,194,1.92,195,1.92,196,1.428,197,1.428,198,2.569,199,1.92]],["title/controllers/CartController.html",[22,1.491,200,2.253]],["body/controllers/CartController.html",[0,0.01,1,3.419,3,0.161,4,0.138,5,0.138,7,0.236,11,0.468,12,0.025,14,0.703,16,2.029,18,0.161,19,0.021,20,0.014,21,0.01,22,1.167,24,1.087,26,1.391,28,1.489,30,1.391,31,0.876,32,0.679,35,1.603,36,1.087,37,1.391,48,1.713,49,1.066,50,1.301,60,2.183,61,1.964,81,1.964,83,4.188,84,2.318,91,2.235,96,2.882,97,1.964,98,1.256,99,1.256,100,1.964,101,1.964,102,1.964,116,1.713,117,1.596,120,1.99,121,1.89,123,2.353,186,2.882,200,2.588,201,2.233,202,1.763,203,3.881,204,2.64,205,2.64,206,2.64,207,3.875,208,2.64,209,2.64,210,2.882,211,2.233,212,1.603,213,2.233,214,2.353,215,2.233,216,2.233,217,2.353,218,2.233,219,2.64,220,3.276,221,2.64,222,2.64,223,2.233,224,2.233,225,2.233,226,1.356,227,2.64,228,2.64,229,2.64,230,2.64]],["title/classes/CartCreationInterface.html",[0,0.013,231,2.253]],["body/classes/CartCreationInterface.html",[0,0.017,2,1.665,3,0.283,4,0.242,5,0.242,7,0.415,8,1.458,11,0.56,12,0.025,13,1.187,14,0.841,18,0.283,19,0.017,20,0.021,21,0.017,231,3.783,232,3.92,233,2.704,234,4.636]],["title/classes/CartEntity.html",[0,0.013,235,1.878]],["body/classes/CartEntity.html",[0,0.012,2,1.179,3,0.2,4,0.171,5,0.171,7,0.294,8,1.164,11,0.625,12,0.026,13,0.948,14,0.939,18,0.2,19,0.012,20,0.017,21,0.012,28,1.99,31,0.806,49,1.245,50,1.519,57,1.686,121,1.352,148,1.828,233,2.675,235,2.519,236,2.776,237,5.177,238,3.144,239,3.851,240,4.524,241,3.283,242,3.283,243,4.524,244,3.283,245,2.865,246,3.283,247,3.283,248,2.442,249,2.442,250,3.283,251,2.463,252,3.283,253,3.283,254,3.283,255,2.776,256,2.776,257,3.283,258,3.283]],["title/classes/CartInterface.html",[0,0.013,214,2.049]],["body/classes/CartInterface.html",[0,0.016,2,1.533,3,0.261,4,0.223,5,0.223,7,0.382,8,1.385,11,0.65,12,0.025,13,1.128,14,0.976,18,0.261,19,0.016,20,0.02,21,0.016,31,0.665,50,1.807,214,3.268,233,2.605,238,3.579,259,3.61,260,4.27,261,3.281,262,4.27,263,4.27]],["title/modules/CartModule.html",[39,1.296,64,2.049]],["body/modules/CartModule.html",[0,0.013,3,0.219,4,0.187,5,0.187,12,0.025,18,0.219,19,0.013,20,0.018,21,0.013,24,1.979,31,0.94,32,0.923,39,2.083,41,1.707,55,2.397,56,1.707,60,3.188,64,3.853,70,2.179,72,3.018,126,1.842,127,2.179,128,2.179,129,1.842,130,3.291,135,2.919,136,2.179,137,2.179,200,3.62,235,1.998,264,3.034,265,3.034,266,3.034,267,3.588,268,3.588,269,3.588,270,3.034,271,3.588]],["title/injectables/CartService.html",[60,1.605,73,0.992]],["body/injectables/CartService.html",[0,0.007,1,2.663,3,0.122,4,0.104,5,0.104,7,0.179,9,1.692,10,1.692,11,0.379,12,0.026,14,0.796,18,0.122,19,0.012,20,0.012,21,0.007,26,1.127,30,1.391,31,0.929,32,0.515,36,1.806,37,1.575,48,1.712,49,1.066,50,1.301,56,0.952,57,1.027,60,1.493,73,0.923,74,0.952,84,2.371,91,2.337,98,0.952,99,0.952,116,2.419,117,2.177,158,2.929,161,1.906,163,2.252,175,1.692,178,1.215,179,1.488,180,1.215,187,1.336,202,2.096,203,2.654,210,1.488,214,1.215,215,1.692,216,1.692,217,1.215,218,1.692,226,1.027,231,1.336,235,1.114,238,1.906,245,1.027,251,0.952,270,1.692,272,1.692,273,4.386,274,3.139,275,2.001,276,3.656,277,3.275,278,3.873,279,2.001,280,3.139,281,3.139,282,2.001,283,3.139,284,2.001,285,3.139,286,2.001,287,1.488,288,2.001,289,2.001,290,2.001,291,2.001,292,1.692,293,2.001,294,1.692,295,1.692,296,1.488,297,1.692,298,1.488,299,2.001,300,3.139,301,2.001,302,3.139,303,2.001,304,1.488,305,1.488,306,3.873,307,2.001,308,2.001,309,2.001,310,2.001,311,2.001,312,2.001,313,2.001]],["title/classes/CreateProductDto.html",[0,0.013,314,2.049]],["body/classes/CreateProductDto.html",[0,0.019,2,1.387,3,0.236,4,0.202,5,0.202,7,0.345,8,1.299,11,0.679,12,0.025,13,1.249,14,1.02,16,2.231,18,0.236,19,0.014,20,0.019,21,0.014,28,2.16,31,0.601,49,1.547,314,3.064,315,3.266,316,3.129,317,3.413,318,4.316,319,3.862,320,3.862,321,3.862,322,2.345]],["title/classes/CreateUserDto.html",[0,0.013,93,1.878]],["body/classes/CreateUserDto.html",[0,0.019,2,1.374,3,0.234,4,0.2,5,0.2,7,0.342,8,1.291,11,0.675,12,0.025,13,1.326,14,1.015,18,0.234,19,0.014,20,0.019,21,0.014,28,2.15,31,0.595,93,2.792,193,2.473,318,4.225,322,2.323,323,3.235,324,3.397,325,3.737,326,3.235,327,3.826,328,3.826,329,3.826,330,4.241]],["title/injectables/JwtAuthGuard.html",[73,0.992,212,2.049]],["body/injectables/JwtAuthGuard.html",[0,0.017,3,0.285,4,0.243,5,0.243,12,0.025,18,0.285,19,0.017,20,0.021,21,0.017,31,0.885,32,1.2,73,1.671,74,2.218,113,3.943,114,2.832,212,3.452,331,3.943,332,3.943,333,4.663]],["title/interfaces/JwtPayload.html",[111,1.878,334,1.133]],["body/interfaces/JwtPayload.html",[3,0.285,4,0.243,5,0.243,7,0.417,8,1.463,11,0.563,12,0.024,13,1.285,18,0.285,19,0.017,20,0.021,21,0.017,111,3.165,193,2.821,334,1.566,335,2.394,336,3.943]],["title/injectables/JwtStrategy.html",[73,0.992,134,2.049]],["body/injectables/JwtStrategy.html",[0,0.011,3,0.187,4,0.16,5,0.16,7,0.274,11,0.52,12,0.026,14,0.781,18,0.187,19,0.011,20,0.016,21,0.011,26,1.547,30,1.099,31,0.921,32,0.787,35,1.858,36,1.26,37,1.099,48,1.904,49,1.185,50,1.447,73,1.267,74,1.455,84,2.053,91,1.904,98,1.455,99,1.455,106,3.039,107,2.276,111,3.013,112,2.276,114,1.858,116,1.352,117,1.26,120,1.571,121,1.26,134,2.616,146,2.276,148,2.776,153,2.587,161,1.858,167,1.571,174,2.587,176,2.587,191,2.587,196,2.276,197,2.276,332,2.587,337,2.587,338,4.308,339,3.059,340,3.059,341,4.308,342,3.059,343,3.059,344,3.059,345,3.059,346,2.587,347,3.059,348,3.059,349,3.059,350,3.059,351,3.059,352,3.059]],["title/interfaces/LoginStatus.html",[108,2.049,334,1.133]],["body/interfaces/LoginStatus.html",[3,0.266,4,0.228,5,0.228,7,0.39,8,1.404,11,0.719,12,0.025,13,1.247,18,0.266,19,0.016,20,0.02,21,0.016,108,3.312,155,4.638,193,2.756,198,5.273,334,1.465,335,2.24,353,3.688]],["title/classes/LoginUserDto.html",[0,0.013,88,1.878]],["body/classes/LoginUserDto.html",[0,0.019,2,1.435,3,0.244,4,0.208,5,0.208,7,0.357,8,1.328,11,0.623,12,0.025,13,1.265,14,0.936,18,0.244,19,0.015,20,0.019,21,0.015,28,1.982,31,0.622,36,2.636,88,2.872,193,2.525,318,4.175,322,2.426,325,3.816,354,3.379,355,3.996,356,3.996]],["title/interfaces/Product.html",[226,1.732,334,1.133]],["body/interfaces/Product.html",[3,0.245,4,0.21,5,0.21,7,0.359,8,1.332,11,0.73,12,0.025,13,1.343,16,2.833,18,0.245,19,0.015,20,0.019,21,0.015,49,1.664,226,2.657,233,2.674,316,3.368,317,3.673,334,1.348,335,2.062,357,3.395]],["title/interfaces/ProductAddedStatus.html",[217,2.049,334,1.133]],["body/interfaces/ProductAddedStatus.html",[3,0.271,4,0.231,5,0.231,7,0.396,8,1.418,11,0.665,12,0.024,13,1.256,18,0.271,19,0.016,20,0.02,21,0.016,178,3.808,180,3.808,217,3.346,334,1.489,335,2.276,358,3.749,359,4.46]],["title/controllers/ProductController.html",[22,1.491,360,2.253]],["body/controllers/ProductController.html",[0,0.01,3,0.166,4,0.141,5,0.141,7,0.242,11,0.327,12,0.025,14,0.717,18,0.166,19,0.02,20,0.015,21,0.01,22,1.198,24,1.116,26,1.418,28,1.518,30,1.418,31,0.884,32,0.698,35,1.646,36,1.116,37,1.418,48,1.198,49,0.746,50,0.91,62,2.393,81,2.017,83,4.227,84,2.34,86,3.467,91,2.264,96,2.939,97,2.017,98,1.289,99,1.289,100,2.017,101,2.017,102,2.017,116,1.746,117,1.627,120,2.028,121,1.919,123,2.399,211,2.292,212,1.646,213,2.292,220,3.34,223,2.292,224,2.292,225,2.292,226,2.028,238,1.646,261,2.595,314,3.562,360,2.638,361,2.292,362,5.121,363,2.711,364,2.711,365,2.711,366,2.711,367,2.711,368,2.292,369,2.292,370,2.292,371,1.811,372,2.711,373,2.711,374,2.711,375,2.711,376,2.711,377,2.711,378,2.711,379,2.292,380,2.711,381,2.711]],["title/interfaces/ProductCreationStatus.html",[334,1.133,371,2.253]],["body/interfaces/ProductCreationStatus.html",[3,0.271,4,0.231,5,0.231,7,0.396,8,1.418,11,0.665,12,0.024,13,1.256,18,0.271,19,0.016,20,0.02,21,0.016,178,3.808,180,3.808,334,1.489,335,2.276,359,4.46,371,3.68,382,3.749]],["title/classes/ProductDto.html",[0,0.013,261,1.878]],["body/classes/ProductDto.html",[0,0.015,2,1.442,3,0.245,4,0.21,5,0.21,7,0.359,8,1.332,11,0.73,12,0.025,13,1.267,14,1.097,16,2.674,18,0.245,19,0.015,20,0.019,21,0.015,49,1.576,233,2.531,261,2.881,316,3.188,317,3.478,383,3.395,384,4.015,385,4.015,386,4.015,387,4.015]],["title/classes/ProductEntity.html",[0,0.013,245,1.732]],["body/classes/ProductEntity.html",[0,0.013,2,1.288,3,0.219,4,0.187,5,0.187,7,0.321,8,1.237,11,0.699,12,0.025,13,1.213,14,1.05,16,2.559,18,0.219,19,0.013,20,0.018,21,0.013,28,2.225,31,0.558,49,1.491,57,1.842,233,2.396,245,2.468,248,2.669,249,4.72,316,3.018,317,3.291,388,3.034,389,3.588,390,4.583,391,3.588,392,3.588,393,3.588,394,3.588]],["title/modules/ProductModule.html",[39,1.296,58,2.049]],["body/modules/ProductModule.html",[0,0.013,3,0.215,4,0.184,5,0.184,12,0.025,18,0.215,19,0.013,20,0.018,21,0.013,24,1.956,31,0.934,32,0.907,39,2.064,41,1.677,55,2.355,56,1.677,58,3.836,62,3.433,70,2.141,72,2.991,126,1.81,127,2.141,128,2.141,129,1.81,130,3.262,135,2.885,136,2.141,137,2.141,245,1.81,360,3.588,370,2.981,395,2.981,396,2.981,397,2.981,398,3.526,399,3.526,400,2.981,401,3.526]],["title/injectables/ProductService.html",[62,1.732,73,0.992]],["body/injectables/ProductService.html",[0,0.009,3,0.147,4,0.125,5,0.125,7,0.215,11,0.524,12,0.026,14,0.876,18,0.147,19,0.009,20,0.013,21,0.009,26,1.298,30,1.56,31,0.847,32,0.619,36,0.99,37,1.56,48,1.92,49,1.497,50,1.459,56,1.144,57,1.235,62,1.856,73,1.063,74,1.144,84,2.446,91,2.405,98,1.144,99,1.144,116,2.289,117,2.133,120,1.235,121,0.99,123,1.46,148,1.339,158,1.606,161,2.195,186,2.689,187,1.606,226,1.856,238,2.933,245,1.856,261,2.418,276,3.226,277,3.057,287,1.789,295,3.057,296,3.231,297,2.034,298,2.689,304,1.789,305,2.689,314,2.933,316,2.013,317,2.195,368,2.034,369,2.034,400,2.034,402,2.034,403,3.057,404,4.831,405,2.405,406,2.405,407,3.615,408,2.405,409,2.405,410,1.789,411,2.034,412,2.405,413,2.405,414,2.405,415,2.405,416,2.405,417,2.034,418,2.405,419,2.405]],["title/interfaces/RegistrationStatus.html",[104,2.049,334,1.133]],["body/interfaces/RegistrationStatus.html",[3,0.271,4,0.231,5,0.231,7,0.396,8,1.418,11,0.665,12,0.024,13,1.256,18,0.271,19,0.016,20,0.02,21,0.016,104,3.346,178,3.808,180,3.808,334,1.489,335,2.276,359,4.46,420,3.749]],["title/classes/UserDto.html",[0,0.013,167,1.732]],["body/classes/UserDto.html",[0,0.018,2,1.306,3,0.222,4,0.19,5,0.19,7,0.325,8,1.248,11,0.703,12,0.025,13,1.22,14,1.056,16,2.144,18,0.222,19,0.013,20,0.018,21,0.013,28,2.097,31,0.566,50,1.629,167,2.49,193,2.412,233,2.412,239,3.608,318,4.166,322,2.208,324,3.313,326,3.075,330,4.101,421,3.075,422,4.614,423,3.637,424,3.637,425,3.637,426,3.637]],["title/classes/UserEntity.html",[0,0.013,251,1.605]],["body/classes/UserEntity.html",[0,0.009,2,0.853,3,0.145,4,0.124,5,0.124,7,0.213,8,0.922,11,0.728,12,0.025,13,1.135,14,1.05,16,1.584,18,0.145,19,0.009,20,0.013,21,0.009,26,1.287,28,2.224,30,0.853,31,0.671,49,0.654,50,1.819,57,1.22,84,1.776,117,0.979,150,4.029,179,2.665,193,1.906,202,2.881,233,2.278,235,2.674,239,3.572,248,1.768,249,3.572,251,1.704,255,2.01,256,3.03,324,2.619,325,2.881,390,3.647,422,3.647,427,2.01,428,4.313,429,4.802,430,2.377,431,2.377,432,5.153,433,2.377,434,4.313,435,5.416,436,5.416,437,2.377,438,2.377,439,2.377,440,2.377,441,3.583,442,2.377,443,4.313,444,2.377,445,2.377,446,2.377,447,3.03,448,2.377,449,2.377,450,2.377,451,2.377,452,2.377]],["title/modules/UsersModule.html",[39,1.296,68,1.878]],["body/modules/UsersModule.html",[0,0.013,3,0.222,4,0.19,5,0.19,12,0.025,18,0.222,19,0.013,20,0.018,21,0.013,24,1.497,31,0.906,32,0.936,39,2.097,41,1.73,55,2.429,56,1.73,68,3.545,70,2.208,72,3.038,126,1.867,127,2.208,128,2.208,129,1.867,130,3.313,135,2.945,136,2.208,137,2.208,163,3.449,251,1.73,453,3.075,454,3.075,455,3.075,456,3.637,457,3.637,458,3.075,459,3.637]],["title/injectables/UsersService.html",[73,0.992,163,1.732]],["body/injectables/UsersService.html",[0,0.006,3,0.104,4,0.089,5,0.089,7,0.153,11,0.569,12,0.026,14,0.855,16,1.54,18,0.104,19,0.006,20,0.01,21,0.006,26,0.992,30,1.581,31,0.854,32,0.439,36,1.138,37,1.581,48,2.083,49,1.297,50,1.582,56,0.811,57,0.876,60,1.905,61,1.269,73,0.813,74,0.811,84,2.461,88,2.23,91,2.425,93,2.23,98,0.811,99,0.811,116,2.284,117,2.199,120,1.789,121,1.435,123,1.036,148,2.763,158,1.846,161,1.678,163,1.419,167,1.789,187,1.139,193,2.193,196,1.269,197,2.056,202,1.846,210,1.269,251,1.314,276,2.676,287,1.269,294,2.337,296,2.592,298,2.056,304,1.269,305,2.056,324,1.678,325,2.676,403,2.337,410,1.269,411,1.442,417,1.442,458,1.442,460,1.442,461,2.764,462,3.484,463,3.484,464,2.764,465,1.706,466,3.484,467,1.706,468,2.764,469,1.706,470,2.764,471,1.706,472,1.706,473,1.706,474,1.706,475,1.706,476,2.764,477,1.706,478,1.706,479,1.269,480,1.706,481,1.706,482,1.706,483,1.269,484,1.706,485,1.706,486,1.706,487,3.484,488,1.706,489,2.764,490,2.764,491,1.706,492,1.706,493,1.706,494,2.764,495,1.706,496,1.706,497,1.706,498,1.706,499,1.706,500,1.706]],["title/coverage.html",[501,3.43]],["body/coverage.html",[0,0.022,1,1.309,5,0.112,6,1.822,11,0.26,12,0.025,19,0.008,20,0.012,21,0.008,22,2.018,23,1.439,25,1.822,33,1.309,60,1.025,62,1.107,73,1.598,75,1.822,79,1.439,80,1.822,88,1.2,93,1.2,104,1.309,106,1.107,108,1.309,111,1.2,121,0.887,129,1.107,134,1.309,157,1.822,163,1.107,167,1.107,200,1.439,201,1.822,212,1.309,214,1.309,217,1.309,226,1.107,231,1.439,232,1.822,235,1.2,236,1.822,245,1.107,251,1.025,259,1.822,261,1.2,272,1.822,314,1.309,315,1.822,323,1.822,331,1.822,334,1.75,336,1.822,337,1.822,353,1.822,354,1.822,357,1.822,358,1.822,360,1.439,361,1.822,371,1.439,379,5.773,382,1.822,383,1.822,388,1.822,402,1.822,420,1.822,421,1.822,427,1.822,460,1.822,479,1.603,483,1.603,501,1.603,502,2.155,503,2.155,504,2.155,505,4.565,506,5.88,507,2.155,508,4.565,509,5.757,510,5.213,511,2.474,512,2.155,513,5.433,514,1.822,515,1.822,516,4.171,517,1.822,518,1.822,519,1.822,520,1.822,521,2.155,522,2.155,523,2.155,524,2.155]],["title/dependencies.html",[126,2.084,525,2.815]],["body/dependencies.html",[0,0.015,12,0.026,19,0.015,20,0.019,21,0.015,32,1.049,56,1.939,114,2.475,126,2.093,141,3.032,146,3.032,292,3.447,322,2.475,346,4.877,447,3.447,526,5.768,527,4.076,528,5.225,529,4.076,530,4.076,531,4.076,532,4.076,533,4.076,534,4.076,535,4.076,536,4.076,537,4.076,538,4.076,539,4.076,540,4.076,541,4.076,542,4.076,543,4.076]],["title/miscellaneous/functions.html",[544,1.88,545,3.433]],["body/miscellaneous/functions.html",[7,0.456,12,0.022,19,0.019,20,0.022,21,0.019,129,3.273,511,3.797,544,3.409,545,4.316,546,4.316]],["title/index.html",[7,0.252,547,2.815,548,2.815]],["body/index.html",[4,0.172,12,0.025,19,0.012,20,0.017,21,0.012,276,2.201,316,1.835,501,2.452,549,3.296,550,3.296,551,4.537,552,3.296,553,3.296,554,3.296,555,3.296,556,3.296,557,3.296,558,3.296,559,3.296,560,3.296,561,5.188,562,3.296,563,3.296,564,3.296,565,6.207,566,3.296,567,3.296,568,2.787,569,6.058,570,3.296,571,3.296,572,4.537,573,3.296,574,3.296,575,3.296,576,3.296,577,4.537,578,4.537,579,3.296,580,3.296,581,3.296,582,4.537,583,4.537,584,3.296,585,3.296,586,3.296,587,3.296,588,3.296,589,2.787,590,3.296,591,3.296,592,3.296,593,3.296,594,3.296,595,3.296,596,3.296,597,3.296,598,3.296,599,3.296,600,3.296,601,3.296,602,3.296,603,3.296,604,3.296,605,3.296,606,3.296,607,3.296]],["title/modules.html",[41,2.193]],["body/modules.html",[12,0.021,19,0.017,20,0.021,21,0.017,40,3.429,41,2.193,58,2.799,64,2.799,66,2.799,68,2.567,589,5.376,608,4.61,609,4.61,610,6.523,611,6.358,612,6.358]],["title/overview.html",[613,3.898]],["body/overview.html",[2,1.188,12,0.024,19,0.012,20,0.017,21,0.012,24,1.363,39,1.272,41,1.574,58,3.565,60,2.955,62,3.191,64,3.565,66,3.843,68,3.377,72,1.843,74,1.574,106,2.67,126,1.699,127,2.01,128,2.01,129,1.699,130,2.01,131,2.798,132,2.798,133,2.798,134,3.157,135,2.763,136,2.01,137,2.01,163,3.191,264,2.798,265,2.798,266,2.798,335,1.699,395,2.798,396,2.798,397,2.798,453,2.798,454,2.798,455,2.798,613,2.798,614,3.309,615,3.309,616,3.309,617,3.309,618,3.309]],["title/miscellaneous/variables.html",[544,1.88,619,3.433]],["body/miscellaneous/variables.html",[7,0.242,12,0.026,13,0.975,19,0.01,20,0.015,21,0.01,37,1.952,49,0.743,84,2.105,91,1.194,116,2.056,117,2.239,121,1.113,167,2.625,193,1.742,233,1.742,251,1.285,324,2.393,410,2.931,479,2.931,483,2.931,511,2.01,514,3.332,515,2.285,516,2.285,517,3.332,518,3.332,519,3.332,520,3.332,544,1.805,546,2.285,568,2.285,619,2.285,620,5.436,621,2.702,622,6.224,623,5.86,624,3.941,625,2.702,626,2.702,627,5.113,628,2.702,629,2.702,630,2.702,631,2.702,632,2.702,633,2.702,634,4.652,635,2.702,636,2.702,637,2.702,638,2.702,639,2.702]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"classes/AddToCart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginStatus.html":{},"classes/LoginUserDto.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationStatus.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"interfaces/RegistrationStatus.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":379,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["0.1.13",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":452,"title":{},"body":{"classes/UserEntity.html":{}}}],["11",{"_index":617,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":615,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":614,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":618,"title":{},"body":{"overview.html":{}}}],["6.1.0",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["6.2.3",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":616,"title":{},"body":{"overview.html":{}}}],["8080",{"_index":639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_createtoken",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["_createtoken(undefined",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LoginStatus.html":{}}}],["addedon",{"_index":237,"title":{},"body":{"classes/CartEntity.html":{}}}],["addproducttocart",{"_index":203,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["addproducttocart(addtocart",{"_index":204,"title":{},"body":{"controllers/CartController.html":{}}}],["addproducttocart(args",{"_index":281,"title":{},"body":{"injectables/CartService.html":{}}}],["addtocart",{"_index":1,"title":{"classes/AddToCart.html":{}},"body":{"classes/AddToCart.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["already",{"_index":417,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["amazing",{"_index":590,"title":{},"body":{"index.html":{}}}],["angular",{"_index":560,"title":{},"body":{"index.html":{}}}],["app",{"_index":567,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":23,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":557,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":40,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["appservice",{"_index":33,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["areequal",{"_index":494,"title":{},"body":{"injectables/UsersService.html":{}}}],["args",{"_index":283,"title":{},"body":{"injectables/CartService.html":{}}}],["async",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/jwt.auth.guard",{"_index":213,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["authcontroller",{"_index":79,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":333,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":66,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":600,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":106,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":609,"title":{},"body":{"modules.html":{}}}],["await",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":591,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":447,"title":{},"body":{"classes/UserEntity.html":{},"dependencies.html":{}}}],["bcrypt.compare(currentpassword",{"_index":626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt.hash(this.password",{"_index":451,"title":{},"body":{"classes/UserEntity.html":{}}}],["beforeinsert",{"_index":443,"title":{},"body":{"classes/UserEntity.html":{}}}],["body",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["boolean",{"_index":359,"title":{},"body":{"interfaces/ProductAddedStatus.html":{},"interfaces/ProductCreationStatus.html":{},"interfaces/RegistrationStatus.html":{}}}],["bootstrap",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":610,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":611,"title":{},"body":{"modules.html":{}}}],["building",{"_index":552,"title":{},"body":{"index.html":{}}}],["cart",{"_index":202,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["cart.controller",{"_index":268,"title":{},"body":{"modules/CartModule.html":{}}}],["cart.entity",{"_index":270,"title":{},"body":{"modules/CartModule.html":{},"injectables/CartService.html":{}}}],["cart.products",{"_index":309,"title":{},"body":{"injectables/CartService.html":{}}}],["cart.service",{"_index":269,"title":{},"body":{"modules/CartModule.html":{}}}],["cart/cart.entity",{"_index":448,"title":{},"body":{"classes/UserEntity.html":{}}}],["cart/cart.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["cart/cart.service",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"controllers/CartController.html":{},"injectables/UsersService.html":{}}}],["cart_service",{"_index":466,"title":{},"body":{"injectables/UsersService.html":{}}}],["cartcontroller",{"_index":200,"title":{"controllers/CartController.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"coverage.html":{}}}],["cartcreationinterface",{"_index":231,"title":{"classes/CartCreationInterface.html":{}},"body":{"classes/CartCreationInterface.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["cartentity",{"_index":235,"title":{"classes/CartEntity.html":{}},"body":{"classes/CartEntity.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["cartid",{"_index":9,"title":{},"body":{"classes/AddToCart.html":{},"injectables/CartService.html":{}}}],["cartinterface",{"_index":214,"title":{"classes/CartInterface.html":{}},"body":{"controllers/CartController.html":{},"classes/CartInterface.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["cartmodule",{"_index":64,"title":{"modules/CartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules.html":{},"overview.html":{}}}],["cartrepo",{"_index":280,"title":{},"body":{"injectables/CartService.html":{}}}],["cartservice",{"_index":60,"title":{"injectables/CartService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["cartwithitems",{"_index":300,"title":{},"body":{"injectables/CartService.html":{}}}],["catch",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["check",{"_index":304,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["class",{"_index":0,"title":{"classes/AddToCart.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{}},"body":{"classes/AddToCart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddToCart.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cartmodule",{"_index":264,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cartmodule_exports",{"_index":265,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cartmodule_providers",{"_index":266,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":395,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_exports",{"_index":396,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":397,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":453,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":454,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":455,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":249,"title":{},"body":{"classes/CartEntity.html":{},"classes/ProductEntity.html":{},"classes/UserEntity.html":{}}}],["column({default",{"_index":240,"title":{},"body":{"classes/CartEntity.html":{}}}],["column({type",{"_index":434,"title":{},"body":{"classes/UserEntity.html":{}}}],["compare",{"_index":492,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparepasswords",{"_index":483,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparepasswords(user.password",{"_index":495,"title":{},"body":{"injectables/UsersService.html":{}}}],["conn",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conn.runmigrations",{"_index":633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connectionname",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connectionoptions",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["connoptions",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(cartrepo",{"_index":275,"title":{},"body":{"injectables/CartService.html":{}}}],["constructor(private",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{}}}],["constructor(productrepo",{"_index":405,"title":{},"body":{"injectables/ProductService.html":{}}}],["constructor(userrepo",{"_index":465,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":22,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cart",{"_index":219,"title":{},"body":{"controllers/CartController.html":{}}}],["controller('product",{"_index":373,"title":{},"body":{"controllers/ProductController.html":{}}}],["controllers",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":501,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":403,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["create(productdto",{"_index":407,"title":{},"body":{"injectables/ProductService.html":{}}}],["create(userdto",{"_index":468,"title":{},"body":{"injectables/UsersService.html":{}}}],["createcart",{"_index":273,"title":{},"body":{"injectables/CartService.html":{}}}],["createdatecolumn",{"_index":432,"title":{},"body":{"classes/UserEntity.html":{}}}],["createdon",{"_index":422,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["createproductdto",{"_index":314,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":93,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["creating",{"_index":225,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["credentials",{"_index":496,"title":{},"body":{"injectables/UsersService.html":{}}}],["currentpassword",{"_index":625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":239,"title":{},"body":{"classes/CartEntity.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["db",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["declarations",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"classes/CartEntity.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"controllers/ProductController.html":{},"classes/ProductEntity.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["default",{"_index":622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":14,"title":{},"body":{"classes/AddToCart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"injectables/ProductService.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":126,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":316,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/Product.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"injectables/ProductService.html":{},"index.html":{}}}],["development",{"_index":568,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["dto/create.product.dto",{"_index":369,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["dto/product.dto",{"_index":368,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["dto/user.create.dto",{"_index":482,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/user.dto",{"_index":478,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/user.login.dto",{"_index":481,"title":{},"body":{"injectables/UsersService.html":{}}}],["dynamicmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["e2e",{"_index":579,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":553,"title":{},"body":{"index.html":{}}}],["email",{"_index":324,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":230,"title":{},"body":{"controllers/CartController.html":{}}}],["entity",{"_index":248,"title":{},"body":{"classes/CartEntity.html":{},"classes/ProductEntity.html":{},"classes/UserEntity.html":{}}}],["entity('cart",{"_index":254,"title":{},"body":{"classes/CartEntity.html":{}}}],["entity('product",{"_index":394,"title":{},"body":{"classes/ProductEntity.html":{}}}],["entity('users",{"_index":449,"title":{},"body":{"classes/UserEntity.html":{}}}],["err",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":305,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["expiresin",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/LoginStatus.html":{}}}],["export",{"_index":18,"title":{},"body":{"classes/AddToCart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginStatus.html":{},"classes/LoginUserDto.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationStatus.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"interfaces/RegistrationStatus.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":332,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/UserEntity.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddToCart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginStatus.html":{},"classes/LoginUserDto.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationStatus.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"interfaces/RegistrationStatus.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/ProductService.html":{}}}],["find(options",{"_index":295,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductService.html":{}}}],["find(userid",{"_index":207,"title":{},"body":{"controllers/CartController.html":{}}}],["findall",{"_index":404,"title":{},"body":{"injectables/ProductService.html":{}}}],["findbyid",{"_index":461,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid(userid",{"_index":470,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbylogin",{"_index":462,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbylogin(undefined",{"_index":472,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbypayload",{"_index":463,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbypayload(undefined",{"_index":474,"title":{},"body":{"injectables/UsersService.html":{}}}],["findcart",{"_index":274,"title":{},"body":{"injectables/CartService.html":{}}}],["findcart(userid",{"_index":285,"title":{},"body":{"injectables/CartService.html":{}}}],["findone",{"_index":464,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(options",{"_index":476,"title":{},"body":{"injectables/UsersService.html":{}}}],["forroot",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["forroot(connoptions",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":491,"title":{},"body":{"injectables/UsersService.html":{}}}],["framework",{"_index":551,"title":{},"body":{"index.html":{}}}],["function",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":545,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('all",{"_index":376,"title":{},"body":{"controllers/ProductController.html":{}}}],["get('find",{"_index":221,"title":{},"body":{"controllers/CartController.html":{}}}],["getconnection(connectionname",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getconnectionoptions",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getdbconnection",{"_index":517,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getdbconnection(connectionname",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getdbconnectionoptions",{"_index":518,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethello",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":547,"title":{"index.html":{}},"body":{}}],["graph",{"_index":608,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":586,"title":{},"body":{"index.html":{}}}],["hashpassword",{"_index":429,"title":{},"body":{"classes/UserEntity.html":{}}}],["heavily",{"_index":558,"title":{},"body":{"index.html":{}}}],["hello",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":597,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["httpexception('cart",{"_index":229,"title":{},"body":{"controllers/CartController.html":{}}}],["httpexception('error",{"_index":224,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["httpexception('invalid",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["httpexception('no",{"_index":380,"title":{},"body":{"controllers/ProductController.html":{}}}],["httpexception('product",{"_index":416,"title":{},"body":{"injectables/ProductService.html":{}}}],["httpexception('user",{"_index":490,"title":{},"body":{"injectables/UsersService.html":{}}}],["httpexception(result.message",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":604,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["httpstatus.bad_request",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["httpstatus.unauthorized",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["id",{"_index":233,"title":{},"body":{"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"interfaces/Product.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":291,"title":{},"body":{"injectables/CartService.html":{}}}],["if(result",{"_index":311,"title":{},"body":{"injectables/CartService.html":{}}}],["import",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/ProductController.html":{},"classes/ProductEntity.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AddToCart.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginStatus.html":{},"classes/LoginUserDto.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationStatus.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"injectables/ProductService.html":{},"interfaces/RegistrationStatus.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddToCart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginStatus.html":{},"classes/LoginUserDto.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationStatus.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"interfaces/RegistrationStatus.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":73,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":287,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(cartentity",{"_index":293,"title":{},"body":{"injectables/CartService.html":{}}}],["injectrepository(productentity",{"_index":413,"title":{},"body":{"injectables/ProductService.html":{}}}],["injectrepository(userentity",{"_index":485,"title":{},"body":{"injectables/UsersService.html":{}}}],["inspired",{"_index":559,"title":{},"body":{"index.html":{}}}],["installation",{"_index":564,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":566,"title":{},"body":{"index.html":{}}}],["interface",{"_index":334,"title":{"interfaces/JwtPayload.html":{},"interfaces/LoginStatus.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"interfaces/ProductCreationStatus.html":{},"interfaces/RegistrationStatus.html":{}},"body":{"interfaces/JwtPayload.html":{},"interfaces/LoginStatus.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"interfaces/ProductCreationStatus.html":{},"interfaces/RegistrationStatus.html":{},"coverage.html":{}}}],["interfaces",{"_index":335,"title":{},"body":{"interfaces/JwtPayload.html":{},"interfaces/LoginStatus.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"interfaces/ProductCreationStatus.html":{},"interfaces/RegistrationStatus.html":{},"overview.html":{}}}],["interfaces/add.to.cart",{"_index":216,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["interfaces/cart.create.dto",{"_index":290,"title":{},"body":{"injectables/CartService.html":{}}}],["interfaces/cart.dto",{"_index":215,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["interfaces/login.status.interface",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["interfaces/payload.interface",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["interfaces/product.added",{"_index":218,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["interfaces/registration.status",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["isemail",{"_index":330,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["isnotempty",{"_index":318,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UserDto.html":{}}}],["isnotempty()@isemail",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["join",{"_index":593,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":256,"title":{},"body":{"classes/CartEntity.html":{},"classes/UserEntity.html":{}}}],["jointable",{"_index":258,"title":{},"body":{"classes/CartEntity.html":{}}}],["jwt",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":212,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/CartController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProductController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":111,"title":{"interfaces/JwtPayload.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":134,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":601,"title":{},"body":{"index.html":{}}}],["legend",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":607,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":583,"title":{},"body":{"index.html":{}}}],["listallproducts",{"_index":362,"title":{},"body":{"controllers/ProductController.html":{}}}],["local",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(loginuserdto",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginstatus",{"_index":108,"title":{"interfaces/LoginStatus.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/LoginStatus.html":{},"coverage.html":{}}}],["loginuserdto",{"_index":88,"title":{"classes/LoginUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["make",{"_index":317,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/Product.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"injectables/ProductService.html":{}}}],["manytoone(type",{"_index":257,"title":{},"body":{"classes/CartEntity.html":{}}}],["manytoone(undefined)@jointable({name",{"_index":246,"title":{},"body":{"classes/CartEntity.html":{}}}],["matching",{"_index":20,"title":{},"body":{"classes/AddToCart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginStatus.html":{},"classes/LoginUserDto.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationStatus.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"interfaces/RegistrationStatus.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"interfaces/ProductAddedStatus.html":{},"interfaces/ProductCreationStatus.html":{},"interfaces/RegistrationStatus.html":{}}}],["metadata",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":544,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":582,"title":{},"body":{"index.html":{}}}],["mode",{"_index":572,"title":{},"body":{"index.html":{}}}],["module",{"_index":39,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["module,dynamicmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":41,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":596,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":602,"title":{},"body":{"index.html":{}}}],["name",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartEntity.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"injectables/ProductService.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":561,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":606,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartEntity.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcart",{"_index":302,"title":{},"body":{"injectables/CartService.html":{}}}],["node.js",{"_index":550,"title":{},"body":{"index.html":{}}}],["npm",{"_index":565,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":436,"title":{},"body":{"classes/UserEntity.html":{}}}],["number",{"_index":16,"title":{},"body":{"classes/AddToCart.html":{},"controllers/CartController.html":{},"classes/CreateProductDto.html":{},"interfaces/Product.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":296,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["onetomany",{"_index":445,"title":{},"body":{"classes/UserEntity.html":{}}}],["onetoone",{"_index":446,"title":{},"body":{"classes/UserEntity.html":{}}}],["onetoone(type",{"_index":255,"title":{},"body":{"classes/CartEntity.html":{},"classes/UserEntity.html":{}}}],["onetoone(undefined)@joincolumn({name",{"_index":430,"title":{},"body":{"classes/UserEntity.html":{}}}],["open",{"_index":584,"title":{},"body":{"index.html":{}}}],["optional",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":410,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":613,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":525,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["passport",{"_index":346,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":325,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["passwords",{"_index":493,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["please",{"_index":594,"title":{},"body":{"index.html":{}}}],["port",{"_index":514,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["post('addtocart",{"_index":227,"title":{},"body":{"controllers/CartController.html":{}}}],["post('create",{"_index":374,"title":{},"body":{"controllers/ProductController.html":{}}}],["post('login",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["primarygeneratedcolumn",{"_index":390,"title":{},"body":{"classes/ProductEntity.html":{},"classes/UserEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":243,"title":{},"body":{"classes/CartEntity.html":{}}}],["primarygeneratedcolumn,onetoone,jointable,joincolumn,manytoone,onetomany",{"_index":250,"title":{},"body":{"classes/CartEntity.html":{}}}],["private",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["process.env.expiresin",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["process.env.node_env",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.secretkey",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["product",{"_index":226,"title":{"interfaces/Product.html":{}},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["product.controller",{"_index":399,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.entity",{"_index":400,"title":{},"body":{"modules/ProductModule.html":{},"injectables/ProductService.html":{}}}],["product.service",{"_index":370,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/dto/product.dto",{"_index":263,"title":{},"body":{"classes/CartInterface.html":{}}}],["product/interfaces/product.creation.status",{"_index":372,"title":{},"body":{"controllers/ProductController.html":{}}}],["product/product.entity",{"_index":288,"title":{},"body":{"injectables/CartService.html":{}}}],["product/product.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["product/product.service",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["productaddedstatus",{"_index":217,"title":{"interfaces/ProductAddedStatus.html":{}},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"interfaces/ProductAddedStatus.html":{},"coverage.html":{}}}],["productcontroller",{"_index":360,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productcreationstatus",{"_index":371,"title":{"interfaces/ProductCreationStatus.html":{}},"body":{"controllers/ProductController.html":{},"interfaces/ProductCreationStatus.html":{},"coverage.html":{}}}],["productdto",{"_index":261,"title":{"classes/ProductDto.html":{}},"body":{"classes/CartInterface.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["productentity",{"_index":245,"title":{"classes/ProductEntity.html":{}},"body":{"classes/CartEntity.html":{},"injectables/CartService.html":{},"classes/ProductEntity.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["productids",{"_index":10,"title":{},"body":{"classes/AddToCart.html":{},"injectables/CartService.html":{}}}],["production",{"_index":574,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":58,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["productrepo",{"_index":277,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductService.html":{}}}],["products",{"_index":238,"title":{},"body":{"classes/CartEntity.html":{},"classes/CartInterface.html":{},"injectables/CartService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["productservice",{"_index":62,"title":{"injectables/ProductService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["productsindb",{"_index":306,"title":{},"body":{"injectables/CartService.html":{}}}],["progressive",{"_index":549,"title":{},"body":{"index.html":{}}}],["project",{"_index":585,"title":{},"body":{"index.html":{}}}],["promise",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise(resolve",{"_index":636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/AddToCart.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginStatus.html":{},"classes/LoginUserDto.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"interfaces/ProductCreationStatus.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"interfaces/RegistrationStatus.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["property",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["query",{"_index":211,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["read",{"_index":595,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProductController.html":{}}}],["register(createproductdto",{"_index":365,"title":{},"body":{"controllers/ProductController.html":{}}}],["register(createuserdto",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(userdto",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["registrationstatus",{"_index":104,"title":{"interfaces/RegistrationStatus.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/RegistrationStatus.html":{},"coverage.html":{}}}],["repository",{"_index":276,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["reset",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolve(data",{"_index":637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result",{"_index":19,"title":{},"body":{"classes/AddToCart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginStatus.html":{},"classes/LoginUserDto.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationStatus.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"interfaces/RegistrationStatus.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.id",{"_index":223,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["result.length",{"_index":378,"title":{},"body":{"controllers/ProductController.html":{}}}],["result.success",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":21,"title":{},"body":{"classes/AddToCart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginStatus.html":{},"classes/LoginUserDto.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationStatus.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"interfaces/RegistrationStatus.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":569,"title":{},"body":{"index.html":{}}}],["rundbmigrations",{"_index":519,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":292,"title":{},"body":{"injectables/CartService.html":{},"dependencies.html":{}}}],["scalable",{"_index":554,"title":{},"body":{"index.html":{}}}],["secret",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":555,"title":{},"body":{"index.html":{}}}],["session",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["shared/mapper",{"_index":480,"title":{},"body":{"injectables/UsersService.html":{}}}],["shared/util",{"_index":484,"title":{},"body":{"injectables/UsersService.html":{}}}],["show",{"_index":381,"title":{},"body":{"controllers/ProductController.html":{}}}],["side",{"_index":556,"title":{},"body":{"index.html":{}}}],["sign",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddToCart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginStatus.html":{},"classes/LoginUserDto.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationStatus.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"interfaces/RegistrationStatus.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":588,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":546,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../mapper.ts",{"_index":621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../util.ts",{"_index":620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:18",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:25",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:40",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:18",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:36",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:49",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:57",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/interfaces/login.status.interface.ts",{"_index":353,"title":{},"body":{"interfaces/LoginStatus.html":{},"coverage.html":{}}}],["src/auth/interfaces/payload.interface.ts",{"_index":336,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/interfaces/registration.status.ts",{"_index":420,"title":{},"body":{"interfaces/RegistrationStatus.html":{},"coverage.html":{}}}],["src/auth/jwt.auth.guard.ts",{"_index":331,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":337,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:17",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:9",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/cart/cart.controller.ts",{"_index":201,"title":{},"body":{"controllers/CartController.html":{},"coverage.html":{}}}],["src/cart/cart.controller.ts:28",{"_index":209,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:44",{"_index":206,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.entity.ts",{"_index":236,"title":{},"body":{"classes/CartEntity.html":{},"coverage.html":{}}}],["src/cart/cart.entity.ts:16",{"_index":247,"title":{},"body":{"classes/CartEntity.html":{}}}],["src/cart/cart.entity.ts:19",{"_index":242,"title":{},"body":{"classes/CartEntity.html":{}}}],["src/cart/cart.entity.ts:8",{"_index":244,"title":{},"body":{"classes/CartEntity.html":{}}}],["src/cart/cart.module.ts",{"_index":267,"title":{},"body":{"modules/CartModule.html":{}}}],["src/cart/cart.service.ts",{"_index":272,"title":{},"body":{"injectables/CartService.html":{},"coverage.html":{}}}],["src/cart/cart.service.ts:18",{"_index":279,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:34",{"_index":286,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:42",{"_index":284,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:48",{"_index":282,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/interfaces/add.to.cart.ts",{"_index":6,"title":{},"body":{"classes/AddToCart.html":{},"coverage.html":{}}}],["src/cart/interfaces/add.to.cart.ts:3",{"_index":15,"title":{},"body":{"classes/AddToCart.html":{}}}],["src/cart/interfaces/add.to.cart.ts:4",{"_index":17,"title":{},"body":{"classes/AddToCart.html":{}}}],["src/cart/interfaces/cart.create.dto.ts",{"_index":232,"title":{},"body":{"classes/CartCreationInterface.html":{},"coverage.html":{}}}],["src/cart/interfaces/cart.create.dto.ts:2",{"_index":234,"title":{},"body":{"classes/CartCreationInterface.html":{}}}],["src/cart/interfaces/cart.dto.ts",{"_index":259,"title":{},"body":{"classes/CartInterface.html":{},"coverage.html":{}}}],["src/cart/interfaces/cart.dto.ts:3",{"_index":260,"title":{},"body":{"classes/CartInterface.html":{}}}],["src/cart/interfaces/cart.dto.ts:4",{"_index":262,"title":{},"body":{"classes/CartInterface.html":{}}}],["src/cart/interfaces/product.added.ts",{"_index":358,"title":{},"body":{"interfaces/ProductAddedStatus.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":511,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/product/dto/create.product.dto.ts",{"_index":315,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/create.product.dto.ts:12",{"_index":320,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:6",{"_index":321,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:9",{"_index":319,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/product.dto.ts",{"_index":383,"title":{},"body":{"classes/ProductDto.html":{},"coverage.html":{}}}],["src/product/dto/product.dto.ts:11",{"_index":384,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/product/dto/product.dto.ts:14",{"_index":386,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/product/dto/product.dto.ts:5",{"_index":385,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/product/dto/product.dto.ts:8",{"_index":387,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/product/interfaces/product.creation.status.ts",{"_index":382,"title":{},"body":{"interfaces/ProductCreationStatus.html":{},"coverage.html":{}}}],["src/product/interfaces/product.dto.ts",{"_index":357,"title":{},"body":{"interfaces/Product.html":{},"coverage.html":{}}}],["src/product/product.controller.ts",{"_index":361,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:26",{"_index":367,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:42",{"_index":364,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.entity",{"_index":253,"title":{},"body":{"classes/CartEntity.html":{}}}],["src/product/product.entity.ts",{"_index":388,"title":{},"body":{"classes/ProductEntity.html":{},"coverage.html":{}}}],["src/product/product.entity.ts:12",{"_index":389,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/product/product.entity.ts:15",{"_index":392,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/product/product.entity.ts:6",{"_index":391,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/product/product.entity.ts:9",{"_index":393,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/product/product.module.ts",{"_index":398,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":402,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:10",{"_index":406,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:18",{"_index":409,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:23",{"_index":412,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:29",{"_index":408,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/shared/mapper.ts",{"_index":515,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/util.ts",{"_index":516,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/dto/user.create.dto.ts",{"_index":323,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/user.create.dto.ts:13",{"_index":327,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/user.create.dto.ts:6",{"_index":329,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/user.create.dto.ts:9",{"_index":328,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/user.dto.ts",{"_index":421,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/user/dto/user.dto.ts:12",{"_index":424,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/user.dto.ts:14",{"_index":423,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/user.dto.ts:5",{"_index":425,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/user.dto.ts:8",{"_index":426,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/user.login.dto.ts",{"_index":354,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/user/dto/user.login.dto.ts:5",{"_index":356,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/user/dto/user.login.dto.ts:8",{"_index":355,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/user/user.entity",{"_index":252,"title":{},"body":{"classes/CartEntity.html":{}}}],["src/user/user.entity.ts",{"_index":427,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:16",{"_index":438,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:17",{"_index":442,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:18",{"_index":439,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:19",{"_index":437,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:20",{"_index":433,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:21",{"_index":440,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:25",{"_index":431,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:28",{"_index":444,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.module.ts",{"_index":456,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/user/user.service.ts",{"_index":460,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:14",{"_index":467,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/user/user.service.ts:21",{"_index":477,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/user/user.service.ts:26",{"_index":471,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/user/user.service.ts:31",{"_index":473,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/user/user.service.ts:48",{"_index":475,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/user/user.service.ts:52",{"_index":469,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":570,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":573,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":575,"title":{},"body":{"index.html":{}}}],["started",{"_index":548,"title":{"index.html":{}},"body":{}}],["starter",{"_index":563,"title":{},"body":{"index.html":{}}}],["statements",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["status",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["stay",{"_index":598,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":13,"title":{},"body":{"classes/AddToCart.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginStatus.html":{},"classes/LoginUserDto.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"interfaces/ProductCreationStatus.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"interfaces/RegistrationStatus.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["succesfully",{"_index":313,"title":{},"body":{"injectables/CartService.html":{}}}],["success",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"interfaces/ProductAddedStatus.html":{},"interfaces/ProductCreationStatus.html":{},"interfaces/RegistrationStatus.html":{}}}],["super",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":589,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":612,"title":{},"body":{"modules.html":{}}}],["t",{"_index":635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":578,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":581,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":580,"title":{},"body":{"index.html":{}}}],["tests",{"_index":577,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":587,"title":{},"body":{"index.html":{}}}],["this._createtoken(user",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.appservice.gethello",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(loginuserdto",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(payload",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.cart_service.createcart",{"_index":498,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.cartrepo.create",{"_index":303,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartrepo.findone(cartid",{"_index":308,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartrepo.findone(userindb.cart",{"_index":301,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartrepo.update(cartid,cart",{"_index":310,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartservice.addproducttocart(addtocart",{"_index":228,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.findcart",{"_index":222,"title":{},"body":{"controllers/CartController.html":{}}}],["this.findone",{"_index":497,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign(user",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.password",{"_index":450,"title":{},"body":{"classes/UserEntity.html":{}}}],["this.productrepo.create",{"_index":418,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo.find",{"_index":414,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo.find(options",{"_index":297,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductService.html":{}}}],["this.productrepo.findbyids(productids",{"_index":307,"title":{},"body":{"injectables/CartService.html":{}}}],["this.productrepo.findone",{"_index":415,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo.save(product",{"_index":419,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productservice.create",{"_index":375,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":377,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.userrepo.create",{"_index":499,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findone",{"_index":489,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findone(options",{"_index":486,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findone(userid",{"_index":488,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.save(user",{"_index":500,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.findbyid(userid",{"_index":299,"title":{},"body":{"injectables/CartService.html":{}}}],["this.usersservice.create(userdto",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbylogin(loginuserdto",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbypayload(payload",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["token",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["topromise",{"_index":520,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":599,"title":{},"body":{"index.html":{}}}],["touserdto",{"_index":479,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["touserdto(user",{"_index":487,"title":{},"body":{"injectables/UsersService.html":{}}}],["true",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"classes/UserEntity.html":{}}}],["try",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["twitter",{"_index":605,"title":{},"body":{"index.html":{}}}],["type",{"_index":11,"title":{},"body":{"classes/AddToCart.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartCreationInterface.html":{},"classes/CartEntity.html":{},"classes/CartInterface.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginStatus.html":{},"classes/LoginUserDto.html":{},"interfaces/Product.html":{},"interfaces/ProductAddedStatus.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationStatus.html":{},"classes/ProductDto.html":{},"classes/ProductEntity.html":{},"injectables/ProductService.html":{},"interfaces/RegistrationStatus.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typeorm",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"classes/CartEntity.html":{},"injectables/CartService.html":{},"classes/ProductEntity.html":{},"injectables/ProductService.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["typeormmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([cartentity",{"_index":271,"title":{},"body":{"modules/CartModule.html":{}}}],["typeormmodule.forfeature([productentity",{"_index":401,"title":{},"body":{"modules/ProductModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":459,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot(connoptions",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":562,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":241,"title":{},"body":{"classes/CartEntity.html":{}}}],["unique",{"_index":441,"title":{},"body":{"classes/UserEntity.html":{}}}],["unit",{"_index":576,"title":{},"body":{"index.html":{}}}],["updated",{"_index":312,"title":{},"body":{"injectables/CartService.html":{}}}],["updatedon",{"_index":428,"title":{},"body":{"classes/UserEntity.html":{}}}],["useguards",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["useguards(jwtauthguard",{"_index":220,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["useguards(jwtauthguard)@get('all",{"_index":363,"title":{},"body":{"controllers/ProductController.html":{}}}],["useguards(jwtauthguard)@get('find",{"_index":208,"title":{},"body":{"controllers/CartController.html":{}}}],["useguards(jwtauthguard)@post('addtocart",{"_index":205,"title":{},"body":{"controllers/CartController.html":{}}}],["useguards(jwtauthguard)@post('create",{"_index":366,"title":{},"body":{"controllers/ProductController.html":{}}}],["usepipes",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["user",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartEntity.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["user.entity",{"_index":458,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.service",{"_index":457,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.username",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/dto/user.create.dto",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/dto/user.dto",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["user/dto/user.login.dto",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/user.entity",{"_index":289,"title":{},"body":{"injectables/CartService.html":{}}}],["user/user.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{}}}],["userdto",{"_index":167,"title":{"classes/UserDto.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userentity",{"_index":251,"title":{"classes/UserEntity.html":{}},"body":{"classes/CartEntity.html":{},"injectables/CartService.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":210,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/UsersService.html":{}}}],["userindb",{"_index":298,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginStatus.html":{},"classes/LoginUserDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["userpassword",{"_index":624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepo",{"_index":294,"title":{},"body":{"injectables/CartService.html":{},"injectables/UsersService.html":{}}}],["userservice",{"_index":278,"title":{},"body":{"injectables/CartService.html":{}}}],["usersmodule",{"_index":68,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":163,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(payload",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":322,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["value",{"_index":623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["varchar",{"_index":435,"title":{},"body":{"classes/UserEntity.html":{}}}],["variable",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":619,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":571,"title":{},"body":{"index.html":{}}}],["website",{"_index":603,"title":{},"body":{"index.html":{}}}],["world",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":411,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["you'd",{"_index":592,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddToCart.html":{"url":"classes/AddToCart.html","title":"class - AddToCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddToCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/interfaces/add.to.cart.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartId\n                            \n                            \n                                productIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cartId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cart/interfaces/add.to.cart.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cart/interfaces/add.to.cart.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddToCart {\n    cartId : string;\n    productIds : number[]\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(connOptions: ConnectionOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    connOptions\n                                    \n                                            ConnectionOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module,DynamicModule} from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConnectionOptions } from 'typeorm';\nimport { ProductModule } from './product/product.module';\nimport { CartService } from './cart/cart.service';\nimport { ProductService } from './product/product.service';\nimport { CartModule } from './cart/cart.module';\nimport { AuthModule } from './auth/auth.module';\nimport {UsersModule} from './user/user.module';\n\n\n\n@Module({ })\nexport class AppModule {\n  \n  static forRoot(connOptions: ConnectionOptions): DynamicModule {\n    return {\n      module: AppModule,\n      controllers: [AppController],\n      imports: [\n        AuthModule,\n        UsersModule,\n        ProductModule,\n        CartModule,\n        TypeOrmModule.forRoot(connOptions),\n      ],\n  providers: [AppService, ProductService, CartService],\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Body,\n    Post,\n    HttpException,\n    HttpStatus,\n    UsePipes,\n    Get,\n    Req,\n    UseGuards,\n  } from '@nestjs/common';\n  import { CreateUserDto } from '../user/dto/user.create.dto';\n  import { RegistrationStatus } from './interfaces/registration.status';\n  import { AuthService } from './auth.service';\n  import { LoginStatus } from './interfaces/login.status.interface';\n  import { LoginUserDto } from '../user/dto/user.login.dto';\n  import { JwtPayload } from './interfaces/payload.interface';\n  import { AuthGuard } from '@nestjs/passport';\n  \n  @Controller('auth')\n  export class AuthController {\n    constructor(private readonly authService: AuthService) {}\n  \n    @Post('register')\n    public async register(\n      @Body() createUserDto: CreateUserDto,\n    ): Promise {\n      const result: RegistrationStatus = await this.authService.register(\n        createUserDto,\n      );\n  \n      if (!result.success) {\n        throw new HttpException(result.message, HttpStatus.BAD_REQUEST);\n      }\n  \n      return result;\n    }\n  \n    @Post('login')\n    public async login(@Body() loginUserDto: LoginUserDto): Promise {\n      return await this.authService.login(loginUserDto);\n    }\n  \n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../user/user.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: process.env.SECRETKEY,\n      signOptions: {\n        expiresIn: process.env.EXPIRESIN,\n      },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [PassportModule, JwtModule],\n})\nexport class AuthModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _createToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _createToken(undefined: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(userDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpException, HttpStatus } from '@nestjs/common';\nimport { CreateUserDto } from '../user/dto/user.create.dto';\nimport { RegistrationStatus } from './interfaces/registration.status';\nimport { UsersService } from '../user/user.service';\nimport { LoginStatus } from './interfaces/login.status.interface';\nimport { LoginUserDto } from '../user/dto/user.login.dto';\nimport { UserDto } from '../user/dto/user.dto';\nimport { JwtPayload } from './interfaces/payload.interface';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async register(userDto: CreateUserDto): Promise {\n    let status: RegistrationStatus = {\n      success: true,\n      message: 'user registered',\n    };\n\n    try {\n      await this.usersService.create(userDto);\n    } catch (err) {\n      status = {\n        success: false,\n        message: err,\n      };\n    }\n\n    return status;\n  }\n\n  async login(loginUserDto: LoginUserDto): Promise {\n    // find user in db\n    const user = await this.usersService.findByLogin(loginUserDto);\n\n    // generate and sign token\n    const token = this._createToken(user);\n\n    return {\n      username: user.username,\n      ...token,\n    };\n  }\n\n  async validateUser(payload: JwtPayload): Promise {\n    const user = await this.usersService.findByPayload(payload);\n    if (!user) {\n      throw new HttpException('Invalid token', HttpStatus.UNAUTHORIZED);\n    }\n    return user;\n  }\n\n  private _createToken({ username }: UserDto): any {\n    const expiresIn = process.env.EXPIRESIN;\n\n    const user: JwtPayload = { username };\n    const accessToken = this.jwtService.sign(user);\n    return {\n      expiresIn,\n      accessToken,\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CartController.html":{"url":"controllers/CartController.html","title":"controller - CartController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CartController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cart\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addProductToCart\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            addProductToCart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addProductToCart(addToCart: AddToCart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('addToCart')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addToCart\n                                    \n                                                AddToCart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('find')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport {\n    Controller,\n    Body,\n    Post,\n    HttpException,\n    HttpStatus,\n    UsePipes,\n    Get,\n    Req,\n    UseGuards,\n    Query,\n  } from '@nestjs/common';\n  import {CartService} from '../cart/cart.service';\n  import {JwtAuthGuard} from '../auth/jwt.auth.guard';\n  import {CartInterface} from './interfaces/cart.dto';\n  import {AddToCart} from './interfaces/add.to.cart';\n  import {ProductAddedStatus} from './interfaces/product.added';\n\n@Controller('cart')\nexport class CartController {\n\n\n    constructor(private readonly cartService : CartService) {}\n\n    @UseGuards(JwtAuthGuard)\n    @Get('find')\n    public async find(userId : number\n     \n    ): Promise {\n      const result: CartInterface  = await this.cartService.findCart(\n        userId,\n      );\n  \n      if (!result.id) {\n        throw new HttpException('Error in creating a new product', HttpStatus.BAD_REQUEST);\n      }\n  \n      return result;\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Post('addToCart')\n    public async addProductToCart(\n        @Body() addToCart: AddToCart,\n    ): Promise {\n       \n      const result: ProductAddedStatus  = await this.cartService.addProductToCart(addToCart);\n\n\n      if (!result) {\n        throw new HttpException('Cart is empty', HttpStatus.BAD_REQUEST);\n      }\n  \n      return result;\n    }\n\n    \n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartCreationInterface.html":{"url":"classes/CartCreationInterface.html","title":"class - CartCreationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartCreationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/interfaces/cart.create.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cart/interfaces/cart.create.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CartCreationInterface {\n    id : String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartEntity.html":{"url":"classes/CartEntity.html","title":"class - CartEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addedOn\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addedOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cart/cart.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cart/cart.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)@JoinTable({name: 'id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cart/cart.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn,OneToOne,JoinTable,JoinColumn,ManyToOne,OneToMany } from 'typeorm';\nimport { UserEntity } from 'src/user/user.entity';\nimport { ProductEntity } from 'src/product/product.entity';\n\n@Entity('cart')\nexport class CartEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: String;\n\n  // @OneToOne(type => UserEntity)\n  // @JoinColumn({ name: 'id' })\n  // user: UserEntity\n\n  @ManyToOne(type => ProductEntity,)\n  @JoinTable({ name: 'id' })\n  products?: ProductEntity[]\n\n  @Column({default : new Date()})\n  addedOn: Date;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartInterface.html":{"url":"classes/CartInterface.html","title":"class - CartInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/interfaces/cart.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cart/interfaces/cart.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cart/interfaces/cart.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProductDto} from '../../product/dto/product.dto';\nexport class CartInterface {\n    id : String;\n    products? : ProductDto[]\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartModule.html":{"url":"modules/CartModule.html","title":"module - CartModule","body":"\n                   \n\n\n\n\n    Modules\n    CartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CartModule\n\n\n\ncluster_CartModule_exports\n\n\n\ncluster_CartModule_providers\n\n\n\n\nCartService \n\nCartService \n\n\n\nCartModule\n\nCartModule\n\nCartService  -->\n\nCartModule->CartService \n\n\n\n\n\nCartService\n\nCartService\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cart/cart.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CartController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CartService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CartController } from './cart.controller';\nimport {CartService} from './cart.service';\nimport {CartEntity} from './cart.entity';\n\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([CartEntity])],\n  controllers: [CartController],\n  providers: [CartService],\n  exports: [CartService]\n})\nexport class CartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addProductToCart\n                            \n                            \n                                    Async\n                                createCart\n                            \n                            \n                                    Async\n                                findCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cartRepo: Repository, productRepo: Repository, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/cart/cart.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addProductToCart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addProductToCart(args: AddToCart)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                AddToCart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createCart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCart()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findCart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCart(userId)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CartEntity } from './cart.entity';\nimport { ProductEntity } from '../product/product.entity';\nimport { UserEntity } from '../user/user.entity';\nimport { Repository } from 'typeorm';\nimport { UsersService } from '../user/user.service';\nimport {ProductAddedStatus} from './interfaces/product.added';\nimport {CartInterface} from './interfaces/cart.dto';\nimport {CartCreationInterface} from './interfaces/cart.create.dto';\nimport {AddToCart} from './interfaces/add.to.cart';\nimport { identity } from 'rxjs';\n\n\n\n@Injectable()\nexport class CartService {\n    constructor( @InjectRepository(CartEntity)\n    private readonly cartRepo: Repository,\n    private readonly productRepo: Repository,\n    //private readonly userRepo: Repository,\n    private readonly userService : UsersService,\n    ) {\n       \n    }\n    \n\n        // async find(options?: object): Promise {\n        //     const products = await this.productRepo.find(options);\n        //     return products;\n        //   }\n        \n        async findCart(userId): Promise {\n            const userInDb = await this.userService.findById(userId);\n            \n            const cartWithItems = await this.cartRepo.findOne(userInDb.cart);\n\n            return cartWithItems;\n          }\n        \n        async createCart() : Promise {\n              const newCart = await this.cartRepo.create();\n\n              return newCart;\n        }\n            \n          async addProductToCart(args : AddToCart): Promise {\n            const {cartId , productIds  } = args;\n            //check if product exists in db \n          \n            const productsInDb = await this.productRepo.findByIds(productIds);\n            if (productsInDb) {\n            \n            \n            const cart = await this.cartRepo.findOne(cartId);\n            cart.products = productsInDb;\n             const result = await this.cartRepo.update(cartId,cart);\n\n             if(result) {\n               return {\n                 success : true,\n                 message : 'Cart updated succesfully'\n               };\n             } \n\n            }\n          }\n        \n        \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create.product.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                make\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/dto/create.product.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            make\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/dto/create.product.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/dto/create.product.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty} from 'class-validator';\n\nexport class CreateProductDto {\n  \n    @IsNotEmpty()\n    name: string;\n  \n    @IsNotEmpty()\n    description: string;\n  \n    @IsNotEmpty()\n    make : number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.create.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.create.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.create.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.create.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsEmail } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsNotEmpty()\n  password: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/payload.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n    username: string;\n  }\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { AuthService } from './auth.service';\nimport { Injectable, HttpException, HttpStatus } from '@nestjs/common';\nimport { JwtPayload } from './interfaces/payload.interface';\nimport { UserDto } from '../user/dto/user.dto';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.SECRETKEY,\n    });\n  }\n\n  async validate(payload: JwtPayload): Promise {\n    const user = await this.authService.validateUser(payload);\n    if (!user) {\n      throw new HttpException('Invalid token', HttpStatus.UNAUTHORIZED);\n    }\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginStatus.html":{"url":"interfaces/LoginStatus.html","title":"interface - LoginStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/login.status.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessToken\n                                \n                                \n                                        expiresIn\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                    \n                                \n                                \n                                    \n                                        accessToken:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                    \n                                \n                                \n                                    \n                                        expiresIn:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginStatus {\n  username: string;\n  accessToken: any;\n  expiresIn: any;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.login.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.login.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.login.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class LoginUserDto {\n  @IsNotEmpty()\n  readonly username: string;\n\n  @IsNotEmpty()\n  readonly password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/interfaces/product.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        make\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        make\n                                    \n                                \n                                \n                                    \n                                        make:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product {\n    \n    id: number;\n  \n    \n    name: string;\n  \n   \n    description: string;\n  \n \n    make : number;\n  }\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductAddedStatus.html":{"url":"interfaces/ProductAddedStatus.html","title":"interface - ProductAddedStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProductAddedStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/interfaces/product.added.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductAddedStatus {\n    success: boolean;\n    message: string;\n  }\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                listAllProducts\n                            \n                            \n                                    Public\n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            listAllProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listAllProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('all')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(CreateProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('create')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    CreateProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Body,\n    Post,\n    HttpException,\n    HttpStatus,\n    UsePipes,\n    Get,\n    Req,\n    UseGuards,\n    Query,\n  } from '@nestjs/common';\n  import {ProductDto} from './dto/product.dto';\n  import {CreateProductDto} from './dto/create.product.dto';\n  import {ProductService} from './product.service';\n  import {ProductCreationStatus} from '../product/interfaces/product.creation.status';\n  import {JwtAuthGuard} from '../auth/jwt.auth.guard';\n\n\n@Controller('product')\nexport class ProductController {\n    constructor(private readonly productService: ProductService) {}\n\n    @UseGuards(JwtAuthGuard)\n    @Post('create')\n    public async register(\n      @Body() CreateProductDto: CreateProductDto,\n    ): Promise {\n      const result: ProductDto  = await this.productService.create(\n        CreateProductDto,\n      );\n  \n      if (!result.id) {\n        throw new HttpException('Error in creating a new product', HttpStatus.BAD_REQUEST);\n      }\n  \n      return result;\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Get('all')\n    public async listAllProducts(\n     \n    ): Promise {\n      const result: ProductDto[]  = await this.productService.findAll();\n\n\n      if (result.length == 0) {\n        throw new HttpException('No products to show', HttpStatus.BAD_REQUEST);\n      }\n  \n      return result;\n    }\n\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductCreationStatus.html":{"url":"interfaces/ProductCreationStatus.html","title":"interface - ProductCreationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProductCreationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/interfaces/product.creation.status.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationStatus {\n    success: boolean;\n    message: string;\n  }\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDto.html":{"url":"classes/ProductDto.html","title":"class - ProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/product.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                make\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/product/dto/product.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/product/dto/product.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            make\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/product/dto/product.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/product/dto/product.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductDto {\n  \n    id: number;\n  \n \n    name: string;\n  \n   \n    description: string;\n  \n  \n    make : number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductEntity.html":{"url":"classes/ProductEntity.html","title":"class - ProductEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                make\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/product.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/product.entity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            make\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/product.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/product.entity.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('product')\nexport class ProductEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column()\n  make : number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_exports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nProductService \n\nProductService \n\n\n\nProductModule\n\nProductModule\n\nProductService  -->\n\nProductModule->ProductService \n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductController } from './product.controller';\nimport { ProductService } from './product.service';\nimport { ProductEntity } from './product.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductEntity])],\n  controllers: [ProductController],\n  providers: [ProductService],\n  exports: [ProductService]\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(productDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(options?: object)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProductEntity } from './product.entity';\nimport { Repository } from 'typeorm';\nimport {ProductDto} from './dto/product.dto';\nimport {CreateProductDto} from './dto/create.product.dto';\n\n\n@Injectable()\nexport class ProductService {\n\n    constructor(\n        @InjectRepository(ProductEntity)\n        private readonly productRepo: Repository,\n      ) {}\n\n\n    async find(options?: object): Promise {\n    const products = await this.productRepo.find(options);\n    return products;\n  }\n\n  async findAll(): Promise {\n    const products = await this.productRepo.find();\n    return products;\n  }\n\n    \n  async create(productDto: CreateProductDto): Promise {\n    const { name, description, make } = productDto;\n\n    // check if the user exists in the db\n    const userInDb = await this.productRepo.findOne({ where: { name } });\n    if (userInDb) {\n      throw new HttpException('Product already exists', HttpStatus.BAD_REQUEST);\n    }\n\n    const product: ProductEntity = await this.productRepo.create({\n      name,\n      description,\n      make\n    });\n\n    await this.productRepo.save(product);\n\n    return product;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrationStatus.html":{"url":"interfaces/RegistrationStatus.html","title":"interface - RegistrationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RegistrationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/registration.status.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegistrationStatus {\n    success: boolean;\n    message: string;\n  }\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdOn\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsEmail } from 'class-validator';\n\nexport class UserDto {\n  @IsNotEmpty()\n  id: number;\n\n  @IsNotEmpty()\n  username: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  createdOn?: Date;\n\n  \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                cart\n                            \n                            \n                                    Optional\n                                createdOn\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedOn\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CartEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinColumn({name: 'id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', nullable: false, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    Defined in src/user/user.entity.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Entity,\n    PrimaryGeneratedColumn,\n    Column,\n    CreateDateColumn,\n    OneToMany,\n    BeforeInsert,\n    OneToOne,\n    JoinColumn\n  } from 'typeorm';\n  import * as bcrypt from 'bcrypt';\n  import {CartEntity} from '../cart/cart.entity';\n  \n  @Entity('users')\n  export class UserEntity {\n    @PrimaryGeneratedColumn() id: number;\n    @Column({ type: 'varchar', nullable: false, unique: true }) username: string;\n    @Column({ type: 'varchar', nullable: false }) password: string;\n    @Column({ type: 'varchar', nullable: false }) email: string;\n    @CreateDateColumn() createdOn?: Date;\n    @CreateDateColumn() updatedOn?: Date;\n    \n    @OneToOne(type => CartEntity)\n    @JoinColumn({ name: 'id' })\n    cart?: CartEntity\n  \n    @BeforeInsert()\n    async hashPassword() {\n      this.password = await bcrypt.hash(this.password, 10);\n    }\n  }\n  \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './user.service';\nimport { UserEntity } from './user.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity])],\n  controllers: [],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByLogin\n                            \n                            \n                                    Async\n                                findByPayload\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: Repository, cart_service: CartService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cart_service\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByLogin(undefined: LoginUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByPayload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByPayload(undefined: any)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(options?: object)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpException, HttpStatus } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserDto } from './dto/user.dto';\nimport { UserEntity } from './user.entity';\nimport { toUserDto } from '../shared/mapper';\nimport { LoginUserDto } from './dto/user.login.dto';\nimport { CreateUserDto } from './dto/user.create.dto';\nimport { comparePasswords } from '../shared/util';\n\nimport {CartService} from '../cart/cart.service';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepo: Repository,\n    private readonly cart_service : CartService\n  ) {}\n\n  async findOne(options?: object): Promise {\n    const user = await this.userRepo.findOne(options);\n    return toUserDto(user);\n  }\n\n  async findById(userId : number): Promise {\n    const user = await this.userRepo.findOne(userId);\n    return user;\n  }\n  \n  async findByLogin({ username, password }: LoginUserDto): Promise {\n    const user = await this.userRepo.findOne({ where: { username } });\n\n    if (!user) {\n      throw new HttpException('User not found', HttpStatus.UNAUTHORIZED);\n    }\n\n    // compare passwords\n    const areEqual = await comparePasswords(user.password, password);\n\n    if (!areEqual) {\n      throw new HttpException('Invalid credentials', HttpStatus.UNAUTHORIZED);\n    }\n\n    return toUserDto(user);\n  }\n\n  async findByPayload({ username }: any): Promise {\n    return await this.findOne({ where: { username } });\n  }\n\n  async create(userDto: CreateUserDto): Promise {\n    const { username, password, email } = userDto;\n\n    // check if the user exists in the db\n   \n    const userInDb = await this.userRepo.findOne({ where: { username } });\n    if (userInDb) {\n      throw new HttpException('User already exists', HttpStatus.BAD_REQUEST);\n    }\n    const cart = await this.cart_service.createCart();\n    \n    const user: UserEntity = await this.userRepo.create({\n      username,\n      password,\n      email,\n      cart\n    });\n\n    await this.userRepo.save(user);\n\n    return toUserDto(user);\n  }\n\n  \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/interfaces/login.status.interface.ts\n            \n            interface\n            LoginStatus\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/interfaces/payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/interfaces/registration.status.ts\n            \n            interface\n            RegistrationStatus\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cart/cart.controller.ts\n            \n            controller\n            CartController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cart/cart.entity.ts\n            \n            class\n            CartEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cart/cart.service.ts\n            \n            injectable\n            CartService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cart/interfaces/add.to.cart.ts\n            \n            class\n            AddToCart\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cart/interfaces/cart.create.dto.ts\n            \n            class\n            CartCreationInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cart/interfaces/cart.dto.ts\n            \n            class\n            CartInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cart/interfaces/product.added.ts\n            \n            interface\n            ProductAddedStatus\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            port\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dto/create.product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/product/dto/product.dto.ts\n            \n            class\n            ProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product/interfaces/product.creation.status.ts\n            \n            interface\n            ProductCreationStatus\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/interfaces/product.dto.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/product.entity.ts\n            \n            class\n            ProductEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/mapper.ts\n            \n            variable\n            toUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/util.ts\n            \n            variable\n            comparePasswords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/util.ts\n            \n            variable\n            getDbConnection\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/util.ts\n            \n            variable\n            getDbConnectionOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/util.ts\n            \n            variable\n            runDbMigrations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/util.ts\n            \n            variable\n            toPromise\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/user.create.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/user.login.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : 6.2.3\n        \n            @nestjs/core : 6.2.3\n        \n            @nestjs/jwt : 6.1.0\n        \n            @nestjs/passport : 6.1.0\n        \n            @nestjs/platform-express : 6.2.3\n        \n            @nestjs/typeorm : ^6.1.1\n        \n            bcrypt : ^5.0.0\n        \n            class-validator : ^0.12.2\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CartModule\n\n\n\ncluster_CartModule_exports\n\n\n\ncluster_CartModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_exports\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nCartService \n\nCartService \n\n\n\nCartModule\n\nCartModule\n\nCartService  -->\n\nCartModule->CartService \n\n\n\n\n\nCartService\n\nCartService\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\nProductService \n\nProductService \n\n\n\nProductModule\n\nProductModule\n\nProductService  -->\n\nProductModule->ProductService \n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            comparePasswords   (src/.../util.ts)\n                        \n                        \n                            getDbConnection   (src/.../util.ts)\n                        \n                        \n                            getDbConnectionOptions   (src/.../util.ts)\n                        \n                        \n                            port   (src/.../main.ts)\n                        \n                        \n                            runDbMigrations   (src/.../util.ts)\n                        \n                        \n                            toPromise   (src/.../util.ts)\n                        \n                        \n                            toUserDto   (src/.../mapper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            comparePasswords\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (userPassword, currentPassword) => {\n  return await bcrypt.compare(currentPassword, userPassword);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDbConnection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (connectionName: string = 'default') => {\n  return await getConnection(connectionName);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDbConnectionOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  connectionName: string = 'default',\n) => {\n  const options = await getConnectionOptions(\n    process.env.NODE_ENV || 'development',\n  );\n  return {\n    ...options,\n    name: connectionName,\n  };\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            runDbMigrations\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (connectionName: string = 'default') => {\n  const conn = await getDbConnection(connectionName);\n  await conn.runMigrations();\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: T): Promise => {\n  return new Promise(resolve => {\n    resolve(data);\n  });\n}\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            port\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.PORT || 8080\n                        \n                    \n\n\n            \n        \n\n    src/shared/mapper.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toUserDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: UserEntity): UserDto => {\n    const { id, username, email } = data;\n  \n    let userDto: UserDto = {\n      id,\n      username,\n      email,\n    };\n  \n    return userDto;\n  }\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
